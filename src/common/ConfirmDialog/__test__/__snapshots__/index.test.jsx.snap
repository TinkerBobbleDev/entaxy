// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ConfirmDialog matches snapshot 1`] = `
"<_class title=\\"Title\\" description=\\"Description\\" show={true} proceed={[Function: mockConstructor]} dismiss={[Function: mockConstructor]}>
  <ConfirmDialog proceed={[Function: mockConstructor]} cancel={[Function: bound cancel]} dismiss={[Function: mockConstructor]} show={true} title=\\"Title\\" description=\\"Description\\">
    <WithStyles(ForwardRef(Dialog)) disableBackdropClick={true} disableEscapeKeyDown={true} maxWidth=\\"xs\\" aria-labelledby=\\"confirmation-dialog-title\\" open={true}>
      <ForwardRef(Dialog) classes={{...}} disableBackdropClick={true} disableEscapeKeyDown={true} maxWidth=\\"xs\\" aria-labelledby=\\"confirmation-dialog-title\\" open={true}>
        <ForwardRef(Modal) className=\\"MuiDialog-root\\" BackdropComponent={{...}} BackdropProps={{...}} closeAfterTransition={true} disableBackdropClick={true} disableEscapeKeyDown={true} onEscapeKeyDown={[undefined]} onClose={[undefined]} open={true}>
          <ForwardRef(Portal) container={[undefined]} disablePortal={false}>
            <Portal containerInfo={{...}}>
              <div onKeyDown={[Function: handleKeyDown]} role=\\"presentation\\" className=\\"MuiDialog-root\\" style={{...}}>
                <WithStyles(ForwardRef(Backdrop)) open={true} onClick={[Function: handleBackdropClick]} transitionDuration={{...}}>
                  <ForwardRef(Backdrop) classes={{...}} open={true} onClick={[Function: handleBackdropClick]} transitionDuration={{...}}>
                    <ForwardRef(Fade) in={true} timeout={{...}} onClick={[Function: handleBackdropClick]}>
                      <Transition appear={true} in={true} onEnter={[Function: handleEnter]} onExit={[Function: handleExit]} timeout={{...}} onClick={[Function: handleBackdropClick]} mountOnEnter={false} unmountOnExit={false} enter={true} exit={true} onEntering={[Function: noop]} onEntered={[Function: noop]} onExiting={[Function: noop]} onExited={[Function: noop]}>
                        <div className=\\"MuiBackdrop-root\\" aria-hidden={true} style={{...}} onClick={[Function: handleBackdropClick]} />
                      </Transition>
                    </ForwardRef(Fade)>
                  </ForwardRef(Backdrop)>
                </WithStyles(ForwardRef(Backdrop))>
                <TrapFocus disableEnforceFocus={false} disableAutoFocus={false} disableRestoreFocus={false} getDoc={[Function: getDoc]} isEnabled={[Function]} open={true}>
                  <div tabIndex={0} data-test=\\"sentinelStart\\" />
                  <ForwardRef(Fade) appear={true} in={true} timeout={{...}} onEnter={[Function: chainedFunction]} onEntering={[undefined]} onEntered={[undefined]} onExit={[undefined]} onExiting={[undefined]} onExited={[Function: chainedFunction]} role=\\"none presentation\\" tabIndex=\\"-1\\">
                    <Transition appear={true} in={true} onEnter={[Function: handleEnter]} onExit={[Function: handleExit]} timeout={{...}} onEntering={[Function: noop]} onEntered={[Function: noop]} onExiting={[Function: noop]} onExited={[Function: chainedFunction]} role=\\"none presentation\\" tabIndex=\\"-1\\" mountOnEnter={false} unmountOnExit={false} enter={true} exit={true}>
                      <div className=\\"MuiDialog-container MuiDialog-scrollPaper\\" onClick={[Function: handleBackdropClick]} onMouseDown={[Function: handleMouseDown]} style={{...}} role=\\"none presentation\\" tabIndex=\\"-1\\">
                        <WithStyles(ForwardRef(Paper)) elevation={24} role=\\"dialog\\" aria-describedby={[undefined]} aria-labelledby=\\"confirmation-dialog-title\\" className=\\"MuiDialog-paper MuiDialog-paperScrollPaper MuiDialog-paperWidthXs\\">
                          <ForwardRef(Paper) classes={{...}} elevation={24} role=\\"dialog\\" aria-describedby={[undefined]} aria-labelledby=\\"confirmation-dialog-title\\" className=\\"MuiDialog-paper MuiDialog-paperScrollPaper MuiDialog-paperWidthXs\\">
                            <div className=\\"MuiPaper-root MuiPaper-elevation24 MuiDialog-paper MuiDialog-paperScrollPaper MuiDialog-paperWidthXs MuiPaper-rounded\\" role=\\"dialog\\" aria-describedby={[undefined]} aria-labelledby=\\"confirmation-dialog-title\\">
                              <WithStyles(ForwardRef(DialogTitle)) id=\\"confirmation-dialog-title\\">
                                <ForwardRef(DialogTitle) classes={{...}} id=\\"confirmation-dialog-title\\">
                                  <div className=\\"MuiDialogTitle-root\\" id=\\"confirmation-dialog-title\\">
                                    <WithStyles(ForwardRef(Typography)) component=\\"h2\\" variant=\\"h6\\">
                                      <ForwardRef(Typography) classes={{...}} component=\\"h2\\" variant=\\"h6\\">
                                        <h2 className=\\"MuiTypography-root MuiTypography-h6\\">
                                          Title
                                        </h2>
                                      </ForwardRef(Typography)>
                                    </WithStyles(ForwardRef(Typography))>
                                  </div>
                                </ForwardRef(DialogTitle)>
                              </WithStyles(ForwardRef(DialogTitle))>
                              <WithStyles(ForwardRef(DialogContent))>
                                <ForwardRef(DialogContent) classes={{...}}>
                                  <div className=\\"MuiDialogContent-root\\">
                                    Description
                                  </div>
                                </ForwardRef(DialogContent)>
                              </WithStyles(ForwardRef(DialogContent))>
                              <WithStyles(ForwardRef(DialogActions))>
                                <ForwardRef(DialogActions) classes={{...}}>
                                  <div className=\\"MuiDialogActions-root MuiDialogActions-spacing\\">
                                    <WithStyles(ForwardRef(Button)) onClick={[Function: mockConstructor]} color=\\"primary\\">
                                      <ForwardRef(Button) classes={{...}} onClick={[Function: mockConstructor]} color=\\"primary\\">
                                        <WithStyles(ForwardRef(ButtonBase)) className=\\"MuiButton-root MuiButton-text MuiButton-textPrimary\\" component=\\"button\\" disabled={false} focusRipple={true} focusVisibleClassName=\\"Mui-focusVisible\\" type=\\"button\\" onClick={[Function: mockConstructor]}>
                                          <ForwardRef(ButtonBase) classes={{...}} className=\\"MuiButton-root MuiButton-text MuiButton-textPrimary\\" component=\\"button\\" disabled={false} focusRipple={true} focusVisibleClassName=\\"Mui-focusVisible\\" type=\\"button\\" onClick={[Function: mockConstructor]}>
                                            <button className=\\"MuiButtonBase-root MuiButton-root MuiButton-text MuiButton-textPrimary\\" onBlur={[Function]} onClick={[Function: mockConstructor]} onFocus={[Function]} onKeyDown={[Function]} onKeyUp={[Function]} onMouseDown={[Function]} onMouseLeave={[Function]} onMouseUp={[Function]} onDragLeave={[Function]} onTouchEnd={[Function]} onTouchMove={[Function]} onTouchStart={[Function]} tabIndex={0} type=\\"button\\" disabled={false}>
                                              <span className=\\"MuiButton-label\\">
                                                Cancel
                                              </span>
                                              <NoSsr>
                                                <WithStyles(undefined) center={false}>
                                                  <ForwardRef(TouchRipple) classes={{...}} center={false}>
                                                    <span className=\\"MuiTouchRipple-root\\">
                                                      <TransitionGroup component={{...}} exit={true} childFactory={[Function: childFactory]} />
                                                    </span>
                                                  </ForwardRef(TouchRipple)>
                                                </WithStyles(undefined)>
                                              </NoSsr>
                                            </button>
                                          </ForwardRef(ButtonBase)>
                                        </WithStyles(ForwardRef(ButtonBase))>
                                      </ForwardRef(Button)>
                                    </WithStyles(ForwardRef(Button))>
                                    <WithStyles(ForwardRef(Button)) onClick={[Function: mockConstructor]} color=\\"primary\\">
                                      <ForwardRef(Button) classes={{...}} onClick={[Function: mockConstructor]} color=\\"primary\\">
                                        <WithStyles(ForwardRef(ButtonBase)) className=\\"MuiButton-root MuiButton-text MuiButton-textPrimary\\" component=\\"button\\" disabled={false} focusRipple={true} focusVisibleClassName=\\"Mui-focusVisible\\" type=\\"button\\" onClick={[Function: mockConstructor]}>
                                          <ForwardRef(ButtonBase) classes={{...}} className=\\"MuiButton-root MuiButton-text MuiButton-textPrimary\\" component=\\"button\\" disabled={false} focusRipple={true} focusVisibleClassName=\\"Mui-focusVisible\\" type=\\"button\\" onClick={[Function: mockConstructor]}>
                                            <button className=\\"MuiButtonBase-root MuiButton-root MuiButton-text MuiButton-textPrimary\\" onBlur={[Function]} onClick={[Function: mockConstructor]} onFocus={[Function]} onKeyDown={[Function]} onKeyUp={[Function]} onMouseDown={[Function]} onMouseLeave={[Function]} onMouseUp={[Function]} onDragLeave={[Function]} onTouchEnd={[Function]} onTouchMove={[Function]} onTouchStart={[Function]} tabIndex={0} type=\\"button\\" disabled={false}>
                                              <span className=\\"MuiButton-label\\">
                                                Ok
                                              </span>
                                              <NoSsr>
                                                <WithStyles(undefined) center={false}>
                                                  <ForwardRef(TouchRipple) classes={{...}} center={false}>
                                                    <span className=\\"MuiTouchRipple-root\\">
                                                      <TransitionGroup component={{...}} exit={true} childFactory={[Function: childFactory]} />
                                                    </span>
                                                  </ForwardRef(TouchRipple)>
                                                </WithStyles(undefined)>
                                              </NoSsr>
                                            </button>
                                          </ForwardRef(ButtonBase)>
                                        </WithStyles(ForwardRef(ButtonBase))>
                                      </ForwardRef(Button)>
                                    </WithStyles(ForwardRef(Button))>
                                  </div>
                                </ForwardRef(DialogActions)>
                              </WithStyles(ForwardRef(DialogActions))>
                            </div>
                          </ForwardRef(Paper)>
                        </WithStyles(ForwardRef(Paper))>
                      </div>
                    </Transition>
                  </ForwardRef(Fade)>
                  <div tabIndex={0} data-test=\\"sentinelEnd\\" />
                </TrapFocus>
              </div>
            </Portal>
          </ForwardRef(Portal)>
        </ForwardRef(Modal)>
      </ForwardRef(Dialog)>
    </WithStyles(ForwardRef(Dialog))>
  </ConfirmDialog>
</_class>"
`;
